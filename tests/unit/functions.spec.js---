import { shallowMount } from '@vue/test-utils';
import Table from '@/components/Spreadsheet/components/Table/index.vue';
import Row from '@/components/Spreadsheet/components/Row/index.vue';

const unsortedLayout = [
    [
        { row: '5:7', col: '2:2', value: '行车路线', width: '100px' },
        { row: '5:5', col: '1:1', value: '行车路线', width: '100px' },
        { row: '5:5', col: '4:4', value: '行车路线', width: '100px' },
    ],
    [
        { row: '1:1', col: '4:5', value: "车辆运行数据", width: '1200px'},
        { row: '1:1', col: '1:3', value: "车辆运行数据", width: '1200px'},
    ],
    [
        { row: '3:3', col: '3:3', value: "主车号", width: '100px'},
        { row: '3:3', col: '1:1', value: "主车号", width: '100px'},
    ],
    [
        { row: '4:4', col: '4:4', value: "主车号", width: '100px'},
        { row: '4:4', col: '1:1', value: "主车号", width: '100px'},
    ],
    [
        { row: '2:2', col: '1:1', value: "主车号", width: '100px'},
    ],
];
const sortedLayout = [
    [
        { row: '1:1', col: '1:3', value: "车辆运行数据", width: '1200px'},
        { row: '1:1', col: '4:5', value: "车辆运行数据", width: '1200px'},
    ],
    [
        { row: '2:2', col: '1:1', value: "主车号", width: '100px'},
    ],
    [
        { row: '3:3', col: '1:1', value: "主车号", width: '100px'},
        { row: '3:3', col: '3:3', value: "主车号", width: '100px'},
    ],
    [
        { row: '4:4', col: '1:1', value: "主车号", width: '100px'},
        { row: '4:4', col: '4:4', value: "主车号", width: '100px'},
    ],
    [
        { row: '5:5', col: '1:1', value: '行车路线', width: '100px' },
        { row: '5:7', col: '2:2', value: '行车路线', width: '100px' },
        { row: '5:5', col: '4:4', value: '行车路线', width: '100px' },
    ],
    [
        { row: '6:6', col: '2:2', hidden: true },
    ],
    [
        { row: '7:7', col: '2:2', hidden: true },
    ]
];

const incompleteLayout = [
    [
        { row: '5:5', col: '1:1', value: '行车路线', width: '100px' },
    ],
    [
        { row: '3:3', col: '1:1', value: "主车号", width: '100px'},
    ],
];
const emptyRowsLayout = [
    [],
    [],
    [
        { row: '3:3', col: '1:1', value: "主车号", width: '100px'},
    ],
    [],
    [
        { row: '5:5', col: '1:1', value: '行车路线', width: '100px' },
    ],
];

describe('Table组件的方法', () => {
    const wrapper = shallowMount(Table, {
        propsData: {
            layout: unsortedLayout
        }
    });
    const vm = wrapper.vm;

    it('排序行, 排序单元格, 切开占几行的单元格', () => {
        vm.processLayoutData();
        expect(vm.sortedLayout).toMatchObject(sortedLayout);
    });

    it('列数', () => {
        expect(vm.maxColsQnty).toBe(5);
    });

    it('获取列表的行数', () => {
        vm.getMaxRowsQnty();
        expect(vm.maxRowsQnty).toBe(7);
    });

    const wrapper1 = shallowMount(Table, {
        propsData: {
            layout: incompleteLayout
        }
    });
    const vm1 = wrapper1.vm;

    it('排序行, 获取列表的行数', () => {
        vm1.sortRows();
        vm1.getMaxRowsQnty();
        expect(vm1.maxRowsQnty).toBe(5);
    });

    it('用空行补充列表', () => {
        vm1.sortRows();
        vm1.getMaxRowsQnty();
        vm1.resultingLayout = vm1.layout.slice();
        vm1.setFullRowsLayout();
        expect(vm1.resultingLayout).toMatchObject(emptyRowsLayout);
    });
});

const initialRow = {  };

describe('Row组件的方法', () => {
    const wrapper = shallowMount(Row, {
        propsData: {
            row: initialRow,
            maxColsQnty,
            rowIdx
        }
    })
});